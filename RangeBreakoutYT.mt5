input int RangeHouStart = 3;
input int RangeMinStart = 3;
input int RangeHourEnd = 3;
input int RangeMinEnd = 3;
input int TradingEndHour = 18;
input int TradingEndMin = 0;

datetime rangeTimeStart;
datetime rangeTimeEnd;
datetime tradingTimeEnd;

double rangeHig;
double rangeLow;

int OnInit(){
  return (INIT_SUCCEEDED);
}

void OnDeinit (const int reason){
}

void OnTick(){
  calcTimes();
  calcRange();
}

void calcTimes(){
  MqlDateTime dt;
  TimeCurrent(dt);
  dt.sec = 0;

  dt.hour = RangeStartHour;
  dt.min = RangeStartMin;
  rangeTimeStart = StructToTime(dt);

  dt.hour = RangeEndHour;
  dt.min = RangeEndMin;
  rangeTimeEnd = StructToTime(dt);

  dt.hour = TradingEndHour;
  dt.min = TradingEndMin;
  tradingTimeEnd = StructToTime(dt);
}

void calcRange(){
  double highs[];
  CopyHigh(_Symbol,PERIOD_M1,rangeTimeStart, rangeTimeEnd, highs);

  double lows[];
  CopyLow(_Symbol,PERIOD_M1,rangeTimeStart, rangeTimeEnd, lows);
  int indexHighest = ArrayMaximum (highs);
  int indexLowest = ArrayMinimum (low);

  rangeHigh = highs[indexHighest];
  rangeLow = low[indexLowest];
  string objName = 
}
